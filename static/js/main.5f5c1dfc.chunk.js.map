{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","id","useState","Math","random","toFixed","slice","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","movieData","setMovieData","count","checkCorrect","trim","onSubmit","preventDefault","prevData","newValue","disabled","App","setMovies","moviesFromServer","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f5c1dfc.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n\n  // const [count, setCount] = useState(0);\n\n  // const [title, setTitle] = useState('');\n  // const [description, setDescription] = useState('');\n  // const [imgUrl, setImgUrl] = useState('');\n  // const [imdbUrl, setImdbUrl] = useState('');\n  // const [imdbId, setImdbId] = useState('');\n\n  const [movieData, setMovieData] = useState({\n    count: 0,\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    count,\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = movieData;\n\n  const reset = () => {\n    setMovieData((prevData) => ({\n      ...prevData,\n      count: prevData.count + 1,\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    }));\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n    reset();\n  };\n\n  const checkCorrect = !title.trim()\n    || !imgUrl.trim()\n    || !imdbUrl.trim()\n    || !imdbId.trim();\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleAdd}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newValue) => setMovieData(\n          {\n            ...movieData,\n            title: newValue,\n          },\n        )}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newValue) => setMovieData(\n          {\n            ...movieData,\n            description: newValue,\n          },\n        )}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newValue) => setMovieData(\n          {\n            ...movieData,\n            imgUrl: newValue,\n          },\n        )}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newValue) => setMovieData(\n          {\n            ...movieData,\n            imdbUrl: newValue,\n          },\n        )}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newValue) => setMovieData(\n          {\n            ...movieData,\n            imdbId: newValue,\n          },\n        )}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={checkCorrect}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie:Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}